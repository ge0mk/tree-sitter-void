==================
basic
==================

func foo() => int {}

---

(source_file
  (decl
    (function_decl
      (identifier)
      (function_signature
        (name
          (identifier)))
      (compound_stmt))))

==================
template parameters
==================

template <T: type>
func foo() => T {}

---

(source_file
  (decl
    (template_parameter_decl
      (template_parameter
        (identifier)
        (identifier)))
    (function_decl
      (identifier)
      (function_signature
        (name
          (identifier)))
      (compound_stmt))))

==================
annotations
==================

@[extern_name: "foo"]
func foo() => int {}

---

(source_file
  (decl
    (annotations
      (annotation
        (identifier)
        (string_literal)))
    (function_decl
      (identifier)
      (function_signature
        (name
          (identifier)))
      (compound_stmt))))

==================
default body
==================

func foo() => int = default

---

(source_file
  (decl
    (function_decl
      (identifier)
      (function_signature
        (name
          (identifier)))
      (default_function_body))))

==================
extern body
==================

func foo() => int = extern

---

(source_file
  (decl
    (function_decl
      (identifier)
      (function_signature
        (name
          (identifier)))
      (extern_function_body))))

==================
parameters
==================

func foo(x: uint, y: int) => int {}

---

(source_file
  (decl
    (function_decl
      (identifier)
      (function_signature
        (parameter_decl
          (identifier)
          (name
            (identifier)))
        (parameter_decl
          (identifier)
          (name
            (identifier)))
        (name
          (identifier)))
      (compound_stmt))))

==================
operator
==================

func +() => int {}

---

(source_file
  (decl
    (function_decl
      (operator_name)
      (function_signature
        (name
          (identifier)))
      (compound_stmt))))
